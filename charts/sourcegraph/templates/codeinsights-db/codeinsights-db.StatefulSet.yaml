{{- if .Values.codeInsightsDB.enabled -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    description: Code Insights Postgresql instance.
  labels:
    {{- include "sourcegraph.labels" . | nindent 4 }}
    {{- if .Values.codeInsightsDB.labels }}
      {{- toYaml .Values.codeInsightsDB.labels | nindent 4 }}
    {{- end }}
    app.kubernetes.io/component: codeinsights-db
    deploy: sourcegraph
  name: {{ .Values.codeInsightsDB.name }}
spec:
  replicas: 1
  revisionHistoryLimit: {{ .Values.sourcegraph.revisionHistoryLimit }}
  selector:
    matchLabels:
      {{- include "sourcegraph.selectorLabels" . | nindent 6 }}
      app: codeinsights-db
  serviceName: codeinsights-db
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: codeinsights
        checksum/codeinsights-db.secret: {{ toJson .Values.codeInsightsDB.auth | sha256sum }}
      {{- if .Values.sourcegraph.podAnnotations }}
      {{- toYaml .Values.sourcegraph.podAnnotations | nindent 8 }}
      {{- end }}
      {{- if .Values.codeInsightsDB.podAnnotations }}
      {{- toYaml .Values.codeInsightsDB.podAnnotations | nindent 8 }}
      {{- end }}
      labels:
      {{- include "sourcegraph.selectorLabels" . | nindent 8 }}
      {{- if .Values.sourcegraph.podLabels }}
      {{- toYaml .Values.sourcegraph.podLabels | nindent 8 }}
      {{- end }}
      {{- if .Values.codeInsightsDB.podLabels }}
      {{- toYaml .Values.codeInsightsDB.podLabels | nindent 8 }}
      {{- end }}
        deploy: sourcegraph
        app: codeinsights-db
        group: backend
    spec:
      initContainers:
      - name: correct-data-dir-permissions
        image: {{ include "sourcegraph.image" (list . "alpine") }}
        imagePullPolicy: {{ .Values.sourcegraph.image.pullPolicy }}
        command: ["sh", "-c", "if [ -d /var/lib/postgresql/data/pgdata ]; then chmod 750 /var/lib/postgresql/data/pgdata; fi"]
        volumeMounts:
        - mountPath: /var/lib/postgresql/data/
          name: disk
        securityContext:
        {{- toYaml .Values.codeInsightsDB.init.containerSecurityContext | nindent 10 }}
        {{- if not .Values.sourcegraph.localDevMode }}
        resources:
          {{- toYaml .Values.alpine.resources | nindent 10 }}
        {{- end }}
      containers:
      - name: codeinsights
        image: {{ include "sourcegraph.image" (list . "codeInsightsDB") }}
        imagePullPolicy: {{ .Values.sourcegraph.image.pullPolicy }}
        {{- with .Values.codeInsightsDB.args }}
        args:
          {{- toYaml . | nindent 8 }}
        {{- end }}
        env:
        {{- include "sourcegraph.databaseAuth" (list . "codeInsightsDB" "POSTGRES_") | nindent 8 }}
        - name: POSTGRES_DB
          value: $(POSTGRES_DATABASE)
        {{- range $name, $item := .Values.codeInsightsDB.env}}
        - name: {{ $name }}
          {{- $item | toYaml | nindent 10 }}
        {{- end }}
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        - name: POSTGRESQL_CONF_DIR
          value: "/conf"
        terminationMessagePolicy: FallbackToLogsOnError
        ports:
        - containerPort: 5432
          name: codeinsights-db
        {{- if not .Values.sourcegraph.localDevMode }}
        resources:
          {{- toYaml .Values.codeInsightsDB.resources | nindent 10 }}
        {{- end }}
        securityContext:
          {{- toYaml .Values.codeInsightsDB.containerSecurityContext | nindent 10 }}
        volumeMounts:
        - mountPath: /var/lib/postgresql/data/
          name: disk
        - mountPath: /conf
          name: codeinsights-conf
        - mountPath: /var/run/postgresql
          name: lockdir
        {{- if .Values.codeInsightsDB.extraVolumeMounts }}
        {{- toYaml .Values.codeInsightsDB.extraVolumeMounts | nindent 8 }}
        {{- end }}
      - env:
        {{- include "sourcegraph.dataSource" (list . "codeInsightsDB" ) | nindent 8 }}
        {{- range $name, $item := .Values.codeInsightsDB.postgresExporter.env}}
        - name: {{ $name }}
          {{- $item | toYaml | nindent 10 }}
        {{- end }}
        - name: PG_EXPORTER_EXTEND_QUERY_PATH
          value: /config/code_insights_queries.yaml
        image: {{ include "sourcegraph.image" (list . "postgresExporter") }}
        terminationMessagePolicy: FallbackToLogsOnError
        name: pgsql-exporter
        {{- if not .Values.sourcegraph.localDevMode }}
        resources:
          {{- toYaml .Values.postgresExporter.resources | nindent 10 }}
        {{- end }}
      {{- if .Values.codeInsightsDB.extraContainers }}
        {{- toYaml .Values.codeInsightsDB.extraContainers | nindent 6 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.codeInsightsDB.podSecurityContext | nindent 8 }}
      {{- include "sourcegraph.nodeSelector" (list . "codeInsightsDB" ) | trim | nindent 6 }}
      {{- include "sourcegraph.affinity" (list . "codeInsightsDB" ) | trim | nindent 6 }}
      {{- include "sourcegraph.tolerations" (list . "codeInsightsDB" ) | trim | nindent 6 }}
      {{- with .Values.sourcegraph.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: 120
      {{- include "sourcegraph.renderServiceAccountName" (list . "codeInsightsDB") | trim | nindent 6 }}
      volumes:
      - name: disk
        persistentVolumeClaim:
          claimName: codeinsights-db
      - name: codeinsights-conf
        configMap:
          defaultMode: 0777
          name: {{ default (print .Values.codeInsightsDB.name "-conf") .Values.codeInsightsDB.existingConfig }}
      - name: lockdir
        emptyDir: {}
      {{- if .Values.codeInsightsDB.extraVolumes }}
      {{- toYaml .Values.codeInsightsDB.extraVolumes | nindent 6 }}
      {{- end }}
  updateStrategy:
    type: RollingUpdate
{{- end }}
