{{- if .Values.pgsql.enabled -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    description: Postgres database for various data.
  labels:
    deploy: sourcegraph
    app.kubernetes.io/component: pgsql
    {{- include "sourcegraph.labels" . | nindent 4 }}
    {{- if .Values.pgsql.labels }}
      {{- toYaml .Values.pgsql.labels | nindent 4 }}
    {{- end }}
  name: {{ .Values.pgsql.name }}
spec:
  replicas: 1
  revisionHistoryLimit: {{ .Values.sourcegraph.revisionHistoryLimit }}
  selector:
    matchLabels:
      {{- include "sourcegraph.selectorLabels" . | nindent 6 }}
      app: pgsql
  serviceName: pgsql
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: pgsql
        checksum/pgsql.secret: {{ toJson .Values.pgsql.auth | sha256sum }}
      {{- if .Values.sourcegraph.podAnnotations }}
      {{- toYaml .Values.sourcegraph.podAnnotations | nindent 8 }}
      {{- end }}
      {{- if .Values.pgsql.podAnnotations }}
      {{- toYaml .Values.pgsql.podAnnotations | nindent 8 }}
      {{- end }}
      labels:
      {{- include "sourcegraph.selectorLabels" . | nindent 8 }}
      {{- if .Values.sourcegraph.podLabels }}
      {{- toYaml .Values.sourcegraph.podLabels | nindent 8 }}
      {{- end }}
      {{- if .Values.pgsql.podLabels }}
      {{- toYaml .Values.pgsql.podLabels | nindent 8 }}
      {{- end }}
        deploy: sourcegraph
        app: pgsql
        group: backend
    spec:
      initContainers:
      - name: correct-data-dir-permissions
        image: {{ include "sourcegraph.image" (list . "alpine") }}
        imagePullPolicy: {{ .Values.sourcegraph.image.pullPolicy }}
        command: ["sh", "-c", "if [ -d /data/pgdata-12 ]; then chmod 750 /data/pgdata-12; fi"]
        volumeMounts:
        - mountPath: /data
          name: disk
        securityContext:
        {{- toYaml .Values.alpine.containerSecurityContext | nindent 10 }}
        {{- if not .Values.sourcegraph.localDevMode }}
        resources:
          {{- toYaml .Values.alpine.resources | nindent 10 }}
        {{- end }}
      containers:
      - image: {{ include "sourcegraph.image" (list . "pgsql") }}
        imagePullPolicy: {{ .Values.sourcegraph.image.pullPolicy }}
        {{- with .Values.pgsql.args }}
        args:
          {{- toYaml . | nindent 8 }}
        {{- end }}
        terminationMessagePolicy: FallbackToLogsOnError
        readinessProbe:
          exec:
            command:
              - /ready.sh
        livenessProbe:
          initialDelaySeconds: 15
          exec:
            command:
              - /liveness.sh
        startupProbe:
          exec:
            command:
              - /liveness.sh
          failureThreshold: 360
          periodSeconds: 10
        name: pgsql
        env:
        {{- include "sourcegraph.databaseAuth" (list . "pgsql" "POSTGRES_") | nindent 8 }}
        - name: POSTGRES_DB
          value: $(POSTGRES_DATABASE)
        {{- range $name, $item := .Values.pgsql.env}}
        - name: {{ $name }}
          {{- $item | toYaml | nindent 10 }}
        {{- end }}
        ports:
        - containerPort: 5432
          name: pgsql
        {{- if not .Values.sourcegraph.localDevMode }}
        resources:
          {{- toYaml .Values.pgsql.resources | nindent 10 }}
        {{- end }}
        securityContext:
          {{- toYaml .Values.pgsql.containerSecurityContext | nindent 10 }}
        volumeMounts:
        - mountPath: /data
          name: disk
        - mountPath: /conf
          name: pgsql-conf
        - mountPath: /dev/shm
          name: dshm
        - mountPath: /var/run/postgresql
          name: lockdir
        {{- if .Values.pgsql.extraVolumeMounts }}
        {{- toYaml .Values.pgsql.extraVolumeMounts | nindent 8 }}
        {{- end }}
      {{- if .Values.pgsql.extraContainers }}
        {{- toYaml .Values.pgsql.extraContainers | nindent 6 }}
      {{- end }}
      - env:
        {{- include "sourcegraph.dataSource" (list . "pgsql" ) | nindent 8 }}
        {{- range $name, $item := .Values.pgsql.postgresExporter.env}}
        - name: {{ $name }}
          {{- $item | toYaml | nindent 10 }}
        {{- end }}
        - name: PG_EXPORTER_EXTEND_QUERY_PATH
          value: /config/queries.yaml
        image: {{ include "sourcegraph.image" (list . "postgresExporter") }}
        terminationMessagePolicy: FallbackToLogsOnError
        name: pgsql-exporter
        {{- if not .Values.sourcegraph.localDevMode }}
        resources:
          {{- toYaml .Values.postgresExporter.resources | nindent 10 }}
        {{- end }}
        securityContext:
          {{- toYaml .Values.postgresExporter.containerSecurityContext | nindent 10 }}
      terminationGracePeriodSeconds: 120
      securityContext:
        {{- toYaml .Values.pgsql.podSecurityContext | nindent 8 }}
      {{- include "sourcegraph.nodeSelector" (list . "pgsql" ) | trim | nindent 6 }}
      {{- include "sourcegraph.affinity" (list . "pgsql" ) | trim | nindent 6 }}
      {{- include "sourcegraph.tolerations" (list . "pgsql" ) | trim | nindent 6 }}
      {{- with .Values.sourcegraph.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- include "sourcegraph.renderServiceAccountName" (list . "pgsql") | trim | nindent 6 }}
      volumes:
      - name: disk
        persistentVolumeClaim:
          claimName: pgsql
      - name: pgsql-conf
        configMap:
          defaultMode: 0777
          name: {{ default (print .Values.pgsql.name "-conf") .Values.pgsql.existingConfig }}
      - name: dshm # Allocate shared memory to match the shared_buffers value
        emptyDir:
          medium: Memory
          sizeLimit: 1G
      - name: lockdir
        emptyDir: {}
      {{- if .Values.pgsql.extraVolumes }}
      {{- toYaml .Values.pgsql.extraVolumes | nindent 6 }}
      {{- end }}
  updateStrategy:
    type: RollingUpdate
{{- end }}
