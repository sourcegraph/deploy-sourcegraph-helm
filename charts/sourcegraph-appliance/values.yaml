# Default values for sourcegraph-appliance.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 1

sourcegraph:
  image:
    repository: us-central1-docker.pkg.dev/sourcegraph-ci/rfc795-internal
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
  # Version and Tag (above) are subtley different
  # Tag is the docker container tag
  # Version is the internal version number as understood by appliance
  # When building production images, the version is set by `ld`
  # But for dev version we would need to specify it, since 0.0.0+dev is the default when built locally
  # version: 5.4.7765
  # log_level: debug


backend:
  image:
    name: appliance
    defaultTag: "5.8.0@sha256:2ff4f4be88bb601786b833c5f019010a165517ca03194e639f727ee8d6d21024"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "sourcegraph-appliance"

podAnnotations: {}
podLabels: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  enabled: false
  type: NodePort
  port: 8080

ingress:
  enabled: true
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

nodeSelector: {}

tolerations: []

affinity: {}

frontend:
  image:
    name: appliance-frontend
    # Overrides the image tag whose default is the chart appVersion.
    defaultTag: "5.8.0@sha256:4a11df0d790dc3f0021797545731c3d001a46fa04fd777e473f64a04095c44a4"

selfUpdate:
  enabled: true

# Set to true to remove all resource requests and limits from the deployed SG.
# Only recommended for development use.
noResourceRestrictions: false

airgap:
  enabled: false
