# Default values for sourcegraph-appliance.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
namespace: sourcegraph
pullPolicy: IfNotPresent
# Overrides the image tag whose default is the chart appVersion.
# Version and Tag (above) are subtley different
# Tag is the docker container tag
# Version is the internal version number as understood by appliance
# When building production images, the version is set by `ld`
# But for dev version we would need to specify it, since 0.0.0+dev is the default when built locally
# version: 5.4.7765
# log_level: debug

global: 
  repository: index.docker.io/sourcegraph

tag: "{{ .Chart.AppVersion }}"

appliance:
  image: appliance
  replicaCount: 1

webui:
  image: operator-ui
  replicaCount: 1

api:
  image: operator-api
  replicaCount: 1

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""


# sourcegraph-appliance-selfupdater:
#   enabled: ... <- TODO: implement this, e.g. set replicas=0 or skip deploy=selfupdater
#   appliance:
#     distrib: http://path-to-my-own-helm-repo/... (override in selfupdater for default distribution)

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  enabled: false
  type: NodePort
  port: 8080

ingress:
  # -- Enable ingress for the Sourcegraph server
  enabled: true
  # -- Annotations for the Sourcegraph server ingress. For example, securing ingress with TLS provided by [cert-manager](https://cert-manager.io/docs/usage/ingress/)
  annotations:
    # --  [Deprecated annotation](https://kubernetes.io/docs/concepts/services-networking/ingress/#deprecated-annotation) for specifing the IngressClass in Kubernetes 1.17 and earlier.
    # If you are using Kubernetes 1.18+, use `ingressClassName` instead and set an override value of `null` for this annotation.
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 150m
  # -- External hostname for the Sourcegraph server ingress (SSL)
  host: ""
  # -- IngressClassName for the Ingress (Available in Kubernetes 1.18+)
  # If you set this field, set the annotation `frontend.ingress.annotations."kubernetes.io/ingress.class"` to `null`
  ingressClassName: null
  # -- Secret containing SSL cert
  tlsSecret: ""

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
