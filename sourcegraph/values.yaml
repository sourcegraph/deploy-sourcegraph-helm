### Common Configuration ###
sourcegraph:
  labels: {}
  image:
    repository: index.docker.io/sourcegraph
    pullPolicy: IfNotPresent
    defaultTag: "{{ .Chart.AppVersion }}"
    useGlobalTagAsDefault: false # When true, sourcegraph.image.defaultTag is used as the default defaultTag for all services, instead of service-specific default defaultTags
  imagePullSecrets: []
  revisionHistoryLimit: 10

# Generic application configuration options
# app:
#   replicaCount: 1
#   image: {}

alpine:
  image:
    defaultTag: "insiders@sha256:670237bcaea9f8055d8986b5d992970f3f22c6f2f2e855d441b1ec074ebc6ff2"
  resources:
    limits:
      cpu: "10m"
      memory: "50Mi"
    requests:
      cpu: "10m"
      memory: "50Mi"
  podSecurityContext:
    runAsUser: 0

cadvisor:
  enabled: true
  image:
    defaultTag: "insiders@sha256:9d274f2cb48b2bd7df24e02e81da96b28e297a5671ccabbdf5cbf733605293a1"
  resources:
    requests:
      memory: 200Mi
      cpu: 150m
    limits:
      memory: 2000Mi
      cpu: 300m
  serviceAccount:
    create: true
    name: "cadvisor"

codeInsightsDB:
  enabled: true
  env:
    POSTGRES_PASSWORD: # Accessible by Sourcegraph applications on the network only, so password auth is not used.
      value: password
  image:
    defaultTag: "insiders@sha256:dfd916b6456ffbeb6ba2d05f92aa2bd77273e617d80142d76bfb23fa255e5e21"
  replicaCount: 1
  resources:
    limits:
      cpu: "4"
      memory: 2Gi
    requests:
      cpu: "4"
      memory: 2Gi
  storageSize: "200Gi"
  podSecurityContext:
    runAsUser: 0
  existingConfig: "" # Name of an existing configmap

codeIntelDB:
  enabled: true
  image:
    defaultTag: "insiders@sha256:d42cefb7dfa69c08361ad4aba37c20ae36dfdcf2ca6ed05e2d85b2bfa7305f57"
  replicaCount: 1
  resources:
    limits:
      cpu: "4"
      memory: 4Gi
    requests:
      cpu: "4"
      memory: 4Gi
  storageSize: "200Gi"
  postgresExporter:
    env:
      DATA_SOURCE_NAME:
        value: postgres://sg:@localhost:5432/?sslmode=disable
  podSecurityContext:
    runAsUser: 0
  existingConfig: "" # Name of an existing configmap

frontend:
  image:
    defaultTag: "insiders@sha256:cc01a2f65e5bb9ef8d762eaa973cf1287507c74d5d4c76b3e00d278c40b356a9"
  replicaCount: 2
  resources:
    limits:
      cpu: "2"
      ephemeral-storage: "8Gi"
      memory: 4G
    requests:
      cpu: "2"
      ephemeral-storage: "4Gi"
      memory: 2G
  podSecurityContext:
    runAsUser: 0
  serviceAccount:
    create: true
    name: "sourcegraph-frontend"
  ingress:
    enabled: true
  env:
    PGDATABASE:
      value: sg
    PGHOST:
      value: pgsql
    PGUSER:
      value: sg
    CODEINSIGHTS_PGDATASOURCE:
      value: postgres://postgres:password@codeinsights-db:5432/postgres
    CODEINTEL_PGDATABASE:
      value: sg
    CODEINTEL_PGHOST:
      value: codeintel-db
    CODEINTEL_PGPORT:
      value: "5432"
    CODEINTEL_PGSSLMODE:
      value: disable
    CODEINTEL_PGUSER:
      value: sg
    GRAFANA_SERVER_URL:
      value: http://grafana:30070
    JAEGER_SERVER_URL:
      value: http://jaeger-query:16686
    PROMETHEUS_URL:
      value: http://prometheus:30090

githubProxy:
  image:
    defaultTag: "insiders@sha256:efd6d9b1093d18202323cf9bca788df146d155ccb117d6488066beb867ac4e2e"
  replicaCount: 1
  resources:
    limits:
      cpu: "1"
      memory: 1G
    requests:
      cpu: 100m
      memory: 250M
  podSecurityContext:
    runAsUser: 0

gitserver:
  image:
    defaultTag: "insiders@sha256:37f04a63676a2496bfb87f55442e574dc20dcba66a8ebd636c7f7212fef2e0d4"
  replicaCount: 1
  storageSize: "200Gi"
  resources:
    limits:
      cpu: "4"
      memory: 8G
    requests:
      cpu: "4"
      memory: 8G
  podSecurityContext:
    runAsUser: 0

  labels: {}

grafana:
  enabled: true
  image:
    defaultTag: "insiders@sha256:1331577ff6080e4a9ac6ec32074815a6eabe7e6abbe8042aa6f05a25eb742a39"
  replicaCount: 1
  storageSize: "2Gi"
  resources:
    limits:
      cpu: "1"
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 512Mi
  podSecurityContext:
    runAsUser: 0
  serviceAccount:
    create: true
  existingConfig: "" # Name of an existing configmap

indexedSearch:
  image:
    defaultTag: "insiders@sha256:5168403765834c6fd064fc7004efd6530104430868712a1ebd3a47ab5e2be031"
  replicaCount: 1
  # The size of disk to used for search indexes.
  # This should typically be gitserver disk size multipled by the number of gitserver shards.
  storageSize: "200Gi"
  resources:
    limits:
      cpu: "2"
      memory: 4G
    requests:
      cpu: 500m
      memory: 2G
  podSecurityContext:
    runAsUser: 0

minio:
  enabled: true
  replicaCount: 1
  storageSize: "100Gi"
  image:
    defaultTag: "insiders@sha256:fccfad6cbd7b717472c7f200cdd65807ff742f883fe1d08986fc09ff3bd7df5e"
  resources:
    limits:
      cpu: "1"
      memory: 500M
    requests:
      cpu: "1"
      memory: 500M
  podSecurityContext:
    runAsUser: 0
  env:
    MINIO_ACCESS_KEY:
      value: AKIAIOSFODNN7EXAMPLE
    MINIO_SECRET_KEY:
      value: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY

searchIndexer:
  image:
    defaultTag: "insiders@sha256:2d0b691e5495a6bcc154e2c9d17a2721e3b2358a71a88cb9f84f284f7980d1dd"
  resources:
    # zoekt-indexserver is CPU bound. The more CPU you allocate to it, the
    # lower lag between a new commit and it being indexed for search.
    limits:
      cpu: "8"
      memory: 8G
    requests:
      cpu: "4"
      memory: 4G

pgsql:
  enabled: true
  image:
    defaultTag: "insiders@sha256:98d134adbc3e29c7125b541a58771f4a6d818876c47bc385ef4ab889d8633a2a"
  replicaCount: 1
  resources:
    limits:
      cpu: "4"
      memory: 4Gi
    requests:
      cpu: "4"
      memory: 4Gi
  podSecurityContext:
    runAsUser: 0
  storageSize: "200Gi"
  env:
    DATA_SOURCE_NAME:
      value: postgres://sg:@localhost:5432/?sslmode=disable
    PG_EXPORTER_EXTEND_QUERY_PATH:
      value: /config/queries.yaml
  existingConfig: "" # Name of an existing configmap

postgresExporter:
  image:
    defaultTag: "insiders@sha256:ed49696495575ef26dd51997eac9fcc92be9023bc7762b56f045e8615595e61e"
  resources:
    limits:
      cpu: 10m
      memory: 50Mi
    requests:
      cpu: 10m
      memory: 50Mi

preciseCodeIntel:
  image:
    defaultTag: "insiders@sha256:c1690021447dc6f9b50d520df9284d594b24f09f3acadc27a407b31f7592fc0f"
  replicaCount: 2
  resources:
    limits:
      cpu: "2"
      memory: 4G
    requests:
      cpu: 500m
      memory: 2G
  podSecurityContext:
    runAsUser: 0
  env:
    NUM_WORKERS:
      value: '4'

queryRunner:
  image:
    defaultTag: "insiders@sha256:cb6285b7021f0fe3953846e58006f82816cba046cbe6892cebff667905ab5a50"
  replicaCount: 1
  resources:
    limits:
      cpu: "1"
      memory: 1G
    requests:
      cpu: 500m
      memory: 1G
  podSecurityContext:
    runAsUser: 0

redisCache:
  enabled: true
  image:
    defaultTag: "insiders@sha256:3c83d172a9c320ef4a5a236a76df7611d7f8f76021eb3bf22b28200ce764acce"
  replicaCount: 1
  resources:
    limits:
      cpu: "1"
      memory: 7Gi
    requests:
      cpu: "1"
      memory: 7Gi
  storageSize: "100Gi"
  podSecurityContext:
    runAsUser: 0

redisExporter:
  image:
    defaultTag: "84464_2021-01-15_c2e4c28@sha256:f3f51453e4261734f08579fe9c812c66ee443626690091401674be4fb724da70"
  resources:
    limits:
      cpu: 10m
      memory: 100Mi
    requests:
      cpu: 10m
      memory: 100Mi

redisStore:
  enabled: true
  image:
    defaultTag: "insiders@sha256:bd1035f2407901ad6c954933e41f5d555786a20b7cb2bafd6649cecd16522602"
  replicaCount: 1
  resources:
    limits:
      cpu: "1"
      memory: 7Gi
    requests:
      cpu: "1"
      memory: 7Gi
  storageSize: "100Gi"
  podSecurityContext:
    runAsUser: 0

repoUpdater:
  image:
    defaultTag: "insiders@sha256:7a54d944125aae8e985ec5c607ec1435d7410687f26b7c705e8baa9f94a41191"
  replicaCount: 1
  resources:
    limits:
      cpu: "1"
      memory: 2Gi
    requests:
      cpu: "1"
      memory: 500Mi
  podSecurityContext:
    runAsUser: 0

searcher:
  image:
    defaultTag: "insiders@sha256:bde5e1eaaf73adf6e915ec47a788bdee96b72d617b89acb0e350001addc08d28"
  replicaCount: 2
  resources:
    limits:
      cpu: "2"
      ephemeral-storage: "26G"
      memory: 2G
    requests:
      cpu: 500m
      ephemeral-storage: "25G"
      memory: 500M
  podSecurityContext:
    runAsUser: 0

symbols:
  image:
    defaultTag: "insiders@sha256:468ce5a77133f508f1ef5f4010b7676c4db7f6795137f768e36fc46ee5c6c072"
  replicaCount: 1
  resources:
    limits:
      cpu: "2"
      ephemeral-storage: "12G"
      memory: 2G
    requests:
      cpu: 500m
      ephemeral-storage: "10G"
      memory: 500M
  podSecurityContext:
    runAsUser: 0

syntectServer:
  image:
    defaultTag: "insiders@sha256:f15a5dcc88ab8574049e37c9985750d0a4aa3d1ec665ec8345f85206155364fb"
  replicaCount: 1
  resources:
    limits:
      cpu: "4"
      memory: 6G
    requests:
      cpu: 250m
      memory: 2G
  podSecurityContext:
    runAsUser: 0

worker:
  image:
    defaultTag: "insiders@sha256:f23c47ec08a7e31bad546b967fd7e7cb9811c4e7a1147f79a59944cd9e24be40"
  replicaCount: 1
  resources:
    limits:
      cpu: "2"
      memory: 4G
    requests:
      cpu: 500m
      memory: 2G
  podSecurityContext:
    runAsUser: 0

prometheus:
  enabled: true
  image:
    defaultTag: "insiders@sha256:525fe0479ea043e1c154f656f187d825f40b57c6a38fcbf2b2eb98d4a1f8d8c8"
  replicaCount: 1
  # Prometheus is relied upon to monitor services for sending alerts to site admins when
  # something is wrong with Sourcegraph, thus its memory requests and limits are the same to
  # guarantee it has enough memory to perform its job reliably and prevent conflicts with
  # other pods on the same host node.
  #
  # The limit chosen here is based on what works reliably on Sourcegraph.com with lots
  # of traffic.
  resources:
    limits:
      cpu: "2"
      memory: 6G
    requests:
      cpu: 500m
      memory: 6G
  podSecurityContext:
    runAsUser: 0
  serviceAccount:
    create: true
  storageSize: "200Gi"
  existingConfig: "" # Name of an existing configmap

jaeger:
  enabled: true
  image:
    defaultTag: "insiders@sha256:abcbae9cb113f1ff2b0ad77583b23ea144a481bb2fa1a982d770b49dcd3f784e"
  replicaCount: 1
  resources:
    limits:
      cpu: "1"
      memory: 1G
    requests:
      cpu: 500m
      memory: 500M
  podSecurityContext:
    runAsUser: 0
  query: {}
  collector: {}

tracing:
  enabled: true
  image:
    name: jaeger-agent
    defaultTag: "insiders@sha256:b980c65f7675a83c2181ba9b5d98efd257709dec1c261d1f93197238076249ab"
  resources:
    limits:
      cpu: "1"
      memory: 500M
    requests:
      cpu: 100m
      memory: 100M

storageClass:
  create: true # Disable if you have your own existing storage class
  name: sourcegraph # Customize to the existing storage class name
  provisioner: kubernetes.io/gce-pd
  type: pd-ssd

nameOverride: ""
fullnameOverride: ""
