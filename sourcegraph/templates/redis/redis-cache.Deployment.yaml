apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    description: Redis for storing short-lived caches.
    kubectl.kubernetes.io/default-container: redis-cache
  labels:
    {{- include "sourcegraph.labels" . | nindent 4 }}
    {{- if .Values.redisCache.labels }}
      {{- toYaml .Values.redisCache.labels | nindent 4 }}
    {{- end }}
    deploy: sourcegraph
    sourcegraph-resource-requires: no-cluster-admin
    app.kubernetes.io/component: redis
  name: {{ default "redis-cache" .Values.redisCache.name }}
spec:
  minReadySeconds: 10
  replicas: {{ .Values.redisCache.replicaCount }}
  revisionHistoryLimit: {{ .Values.sourcegraph.revisionHistoryLimit }}
  selector:
    matchLabels:
      {{- include "sourcegraph.selectorLabels" . | nindent 6 }}
      app: redis-cache
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
      {{- if .Values.sourcegraph.podAnnotations }}
      {{- toYaml .Values.sourcegraph.podAnnotations | nindent 8 }}
      {{- end }}
      {{- if .Values.redisCache.podAnnotations }}
      {{- toYaml .Values.redisCache.podAnnotations | nindent 8 }}
      {{- end }}
      labels:
      {{- if .Values.sourcegraph.podLabels }}
      {{- toYaml .Values.sourcegraph.podLabels | nindent 8 }}
      {{- end }}
      {{- if .Values.redisCache.podLabels }}
      {{- toYaml .Values.redisCache.podLabels | nindent 8 }}
      {{- end }}
      labels:
        deploy: sourcegraph
        app: redis-cache
    spec:
      containers:
      - name: redis-cache
        image: {{ include "sourcegraph.image" (list . "redisCache" "redis-cache") }}
        terminationMessagePolicy: FallbackToLogsOnError
        livenessProbe:
          initialDelaySeconds: 30
          tcpSocket:
            port: redis
        env:
        {{- range $name, $item := .Values.redisCache.env}}
        - name: {{ $name }}
          {{- $item | toYaml | nindent 10 }}
        {{- end }}
        ports:
        - containerPort: 6379
          name: redis
        readinessProbe:
          initialDelaySeconds: 5
          tcpSocket:
            port: redis
        resources:
        {{- toYaml .Values.redisCache.resources | nindent 10 }}
        volumeMounts:
        - mountPath: /redis-data
          name: redis-data
      - name: redis-exporter
        image: {{ include "sourcegraph.image" (list . "redisExporter" "redis_exporter") }}
        terminationMessagePolicy: FallbackToLogsOnError
        {{- range $name, $item := .Values.redisExporter.env}}
        - name: {{ $name }}
          {{- $item | toYaml | nindent 10 }}
        {{- end }}
        ports:
        - containerPort: 9121
          name: redisexp
        resources:
        {{- toYaml .Values.redisExporter.resources | nindent 10 }}
      {{- if .Values.redisCache.extraContainers }}
        {{- toYaml .Values.redisCache.extraContainers | nindent 6 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.redisCache.podSecurityContext | nindent 8 }}
      {{- with .Values.sourcegraph.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.sourcegraph.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.sourcegraph.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: {{ default "redis-cache" .Values.redisCache.name }}
